/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author kamac8665
 */
public class FormEncryptionProgram extends javax.swing.JFrame {

    /**
     * Creates new form FormEncryptionProgram
     */
    public FormEncryptionProgram() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        titleLabel1 = new javax.swing.JLabel();
        titleLabel2 = new javax.swing.JLabel();
        infroLabel1 = new javax.swing.JLabel();
        decryptedMessage = new javax.swing.JTextField();
        encryptDecryptedMessage = new javax.swing.JButton();
        EncryptedOutput = new javax.swing.JLabel();
        DecryptedOutput = new javax.swing.JLabel();
        infoLabel2 = new javax.swing.JLabel();
        encryptedMessage = new javax.swing.JTextField();
        decryptEncryptedMessage = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        backgroundPanel.setBackground(new java.awt.Color(153, 153, 255));

        titleLabel1.setText("--TOP SECRET--");

        titleLabel2.setText("==ENCRYPT/DECRYPT SOFTWARE==");

        infroLabel1.setText("enter a decrypted message and it will be encrypted");

        encryptDecryptedMessage.setText("ENCRYPT");
        encryptDecryptedMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptDecryptedMessageActionPerformed(evt);
            }
        });

        EncryptedOutput.setBackground(new java.awt.Color(255, 153, 153));
        EncryptedOutput.setForeground(new java.awt.Color(102, 102, 255));
        EncryptedOutput.setText("encrypted message will be displayed here...");

        DecryptedOutput.setBackground(new java.awt.Color(255, 153, 153));
        DecryptedOutput.setForeground(new java.awt.Color(102, 102, 255));
        DecryptedOutput.setText("decrypted message will be displayed here...");

        infoLabel2.setText("enter an encrypted message and it will be decrypted");

        decryptEncryptedMessage.setText("DECRYPT");
        decryptEncryptedMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptEncryptedMessageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout backgroundPanelLayout = new javax.swing.GroupLayout(backgroundPanel);
        backgroundPanel.setLayout(backgroundPanelLayout);
        backgroundPanelLayout.setHorizontalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(titleLabel1))
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(infroLabel1))
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(decryptedMessage)
                            .addComponent(EncryptedOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(encryptedMessage)
                            .addComponent(DecryptedOutput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)))
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(infoLabel2)))
                .addContainerGap(46, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundPanelLayout.createSequentialGroup()
                        .addComponent(titleLabel2)
                        .addGap(105, 105, 105))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundPanelLayout.createSequentialGroup()
                        .addComponent(encryptDecryptedMessage)
                        .addGap(158, 158, 158))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundPanelLayout.createSequentialGroup()
                        .addComponent(decryptEncryptedMessage)
                        .addGap(155, 155, 155))))
        );
        backgroundPanelLayout.setVerticalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addComponent(titleLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titleLabel2)
                .addGap(18, 18, 18)
                .addComponent(infroLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(decryptedMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(encryptDecryptedMessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EncryptedOutput)
                .addGap(18, 18, 18)
                .addComponent(infoLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(encryptedMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(decryptEncryptedMessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DecryptedOutput)
                .addGap(0, 52, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void encryptDecryptedMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptDecryptedMessageActionPerformed
        
        String origMessage;
        String revMessage = "";
        String encMessage = "";
        String extraString1 = "";
        String extraString2 = "";
        char tempChar;
        char tempExtraChar;
        int tempAscii;
        int tempExtraAscii;
        
        System.out.println("Please enter a message to encrypt:");
        origMessage = decryptedMessage.getText();
        
        for (int i = origMessage.length() - 1; i >= 0; i = i - 1)
        {
            revMessage = revMessage + origMessage.charAt(i);
        }
        
        for (int i = 0; i< revMessage.length(); i = i + 1)
        {
            tempChar = revMessage.charAt(i);
            
            tempAscii = (int) tempChar;
            
            tempAscii = tempAscii + 3;
            
            tempChar =  (char) tempAscii;
            
            encMessage = encMessage + tempChar;
        }
        
        for (int i = 0; i <= 7; i = i + 1)
        {
            tempExtraAscii = (int) Math.round(Math.random()*25+1+96);
            tempExtraChar = (char)tempExtraAscii;
            extraString1 = extraString1 + tempExtraChar;
        }
        
        for (int i = 0; i <= 7; i = i + 1)
        {
            tempExtraAscii = (int) Math.round(Math.random()*25+1+96);
            tempExtraChar = (char)tempExtraAscii;
            extraString2 = extraString2 + tempExtraChar;
        }
        
        encMessage = extraString1 + encMessage + extraString2;
        
        EncryptedOutput.setText("" + encMessage);
    }//GEN-LAST:event_encryptDecryptedMessageActionPerformed

    private void decryptEncryptedMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptEncryptedMessageActionPerformed
        String origMessage;
        String encMessage = "";
        char tempChar;
        int tempAscii;
        
        System.out.println("Please enter a message to encrypt:");
        origMessage = encryptedMessage.getText();
        
        for (int i = 0; i< origMessage.length(); i = i + 1)
        {
            tempChar = origMessage.charAt(i);
            
            tempAscii = (int) tempChar;
            
            tempAscii = tempAscii - 3;
            
            tempChar = (char) tempAscii;
            
            encMessage = encMessage + tempChar;
        }
        
        DecryptedOutput.setText(encMessage);
    }//GEN-LAST:event_decryptEncryptedMessageActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormEncryptionProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormEncryptionProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormEncryptionProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormEncryptionProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormEncryptionProgram().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DecryptedOutput;
    private javax.swing.JLabel EncryptedOutput;
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JButton decryptEncryptedMessage;
    private javax.swing.JTextField decryptedMessage;
    private javax.swing.JButton encryptDecryptedMessage;
    private javax.swing.JTextField encryptedMessage;
    private javax.swing.JLabel infoLabel2;
    private javax.swing.JLabel infroLabel1;
    private javax.swing.JLabel titleLabel1;
    private javax.swing.JLabel titleLabel2;
    // End of variables declaration//GEN-END:variables
}
